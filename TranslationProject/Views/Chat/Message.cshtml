@{
    ViewData["Title"] = "Chat";
    var receiverId = ViewData["ReceiverId"] as string;
    var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<h1>Chat</h1>

<div class="row">
    <div class="col-md-6">
        <div id="messagesList" class="border p-3 mb-3" style="height: 300px; overflow-y: scroll;">
            <!-- Messages will be appended here -->
        </div>
        <form id="sendMessageForm">
            <div class="form-group">
                <label for="messageInput">Message</label>
                <input type="text" id="messageInput" class="form-control" placeholder="Enter your message" />
            </div>
            <button type="submit" class="btn btn-primary mt-2">Send</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        const receiverId = "@receiverId";
		const userId = "@userId";

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/Chat")
            .build();

        connection.on("ReceiveMessage", (user, message) => {
			fetchMessages();
        });

        connection.start().then(fetchMessages).catch(err => console.error(err.toString()));

        document.getElementById("sendMessageForm").addEventListener("submit", event => {
            event.preventDefault();
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", receiverId, message).catch(err => console.error(err.toString())).then(fetchMessages);
            document.getElementById("messageInput").value = "";
        });

        async function fetchMessages() {
            const response = await fetch(`https://localhost:7156/api/Messaging/GetMessages?userId=${userId}&receiverId=${receiverId}`);
            if (response.ok) {
                const messages = await response.json();
                const messagesList = document.getElementById("messagesList");
                messagesList.innerHTML = "";
                messages.forEach(msg => {
                    const msgDiv = document.createElement("div");
                    const timestamp = new Date(msg.timeStamp).toLocaleString();
                    msgDiv.textContent = `${msg.senderId == userId ? "You: " : "Him/Her: "}: ${msg.content} (${timestamp})`;
                    messagesList.appendChild(msgDiv);
                });
            } else {
                console.error("Failed to fetch messages");
            }
        }
    </script>
}